services:
  nginx:
    restart: always
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    ports:
      - '9999:9999'
    ulimits:
      nproc: 1000000
      nofile:
        soft: 1000000
        hard: 1000000
    deploy:
      resources:
        limits:
          cpus: '0.10'
          memory: '100MB'
  postgres:
    image: postgres:latest
    command: postgres -c 'max_connections=350' -c 'log_error_verbosity=terse'
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: loja-virtual
      POSTGRES_PASSWORD: 1231lalk1lnals344#$%
      POSTGRES_DB: loja-virtual
    volumes:
      - .docker/postgres/data:/var/lib/postgresql/data
      - ./script.sql:/docker-entrypoint-initdb.d/script.sql
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: '120MB'
  api1:
    restart: always
    hostname: api1
    container_name: api1
    build:
      context: .
    ports:
      - 4100:4100
    environment:
      - DB_TYPE=postgres
      - DB_URL=postgres
      - DB_PORT=5432
      - DB_NAME=loja-virtual
      - DB_USER=loja-virtual
      - DB_PASS=1231lalk1lnals344#$%
      - APP_PORT=4100
      - NODE_ENV=production
    deploy:
      resources:
        limits:
          cpus: '0.55'
          memory: '165MB'
    depends_on:
      - postgres
  api2:
    restart: always
    hostname: api2
    container_name: api2
    build:
      context: .
    ports:
      - 4200:4200
    environment:
      - DB_TYPE=postgres
      - DB_URL=postgres
      - DB_PORT=5432
      - DB_NAME=loja-virtual
      - DB_USER=loja-virtual
      - DB_PASS=1231lalk1lnals344#$%
      - APP_PORT=4200
      - NODE_ENV=production
    deploy:
      resources:
        limits:
          cpus: '0.55'
          memory: '165MB'
    depends_on:
      - postgres
